Problem Statement - 
You are given a linked list where each element in the list is a node and have an integer data. 
You need to add 1 to the number formed by concatinating all the list node numbers together and return the head of the modified linked list. 
Note: The head represents the first element of the given array.

Example - 
Input: LinkedList: 4->5->6
Output: 457

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
  public:
  void reverse(Node* &head){
      Node* curr=head, *prev=NULL, *nxt=NULL;
      while(curr) nxt=curr->next, curr->next=prev, prev=curr, curr=nxt;
      head=prev;
  }
    Node* addOne(Node* head) {
        reverse(head);
        int c=1, s=0;
        Node* t=head, *pt=NULL;
        while(t){
            s=t->data+c, c=s/10, s=s%10;
            t->data=s;
            pt=t;
            t=t->next;
        }
        if(c>0) pt->next=new Node(c);
        reverse(head);
        return head;
    }
};
