Problem Statement - 
Given a Doubly Linked list and a position. The task is to delete a node from a given position (position starts from 1) in a doubly linked list and return the head of the doubly Linked list.

Example - 
Input: LinkedList = 1 <--> 3 <--> 4, x = 3
Output: 1 <--> 3

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
  public:
    // Function to delete a node at given position.
    Node* deleteNode(Node* head, int x) {
        // Your code here
        Node* nxt=NULL, *prev=NULL, *t=NULL;
        int cnt=1;
        if(x==1){
            nxt=head->next;
            head->next=NULL;
            nxt->prev=NULL;
            return nxt;
        }
        t=head;
        while(t){
            // cout<<t->data<<" "<<cnt<<endl;
            if(cnt==x){
                nxt=t->next;
                prev=t->prev;
                prev->next=nxt;
                if(nxt) nxt->prev=prev;
                t->next=NULL, t->prev=NULL;
                return head;
            }
            t=t->next;
            cnt++;
        }
        return head;
    }
};
