Problem Statement - 
Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].
The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.
You must write an algorithm that runs in O(n) time and without using the division operation.

Example - 
Input: nums = [1,2,3,4]
Output: [24,12,8,6]

-----------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        vector<int> ans;
        int prod = 1;
        int i = 0;
        while(i<nums.size()){
            ans.push_back(prod);
            prod*=nums[i];
            i++;
        }
        i = nums.size() - 1;
        prod = 1;
        while(i>=0){
            ans[i]*=prod;
            prod*=nums[i];
            i--;
        }
        return ans;
    }
};
