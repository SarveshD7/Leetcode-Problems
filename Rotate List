Problem Link - 
Given the head of a linked list, rotate the list to the right by k places.

Example - 
Input: head = [1,2,3,4,5], k = 2
Output: [4,5,1,2,3]

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(!head || !head->next) return head;
        ListNode* t=head, *nxt=NULL, *tl=NULL;
        int s=0;
        while(t) s++, tl=t, t=t->next;
        k=s-k%s-1;
        t=head;
        while(k>0) t=t->next, k--;
        nxt=t->next;
        if(nxt){
            tl->next=head;
            head=nxt;
            t->next=NULL;
        }
        return head;
    }
};
