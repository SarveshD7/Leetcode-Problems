Problem Statemetn - 
Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.
The overall run time complexity should be O(log (m+n)).

Example - 
Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        if(nums1.size()>nums2.size()){
            vector<int>t=nums2;
            nums2=nums1, nums1=t;
        }
        int l=0, r=nums1.size()-1, m, c, v1, v2,i, n=nums1.size()+nums2.size(),j,v3,v4;
        double ans;
        while(l<=r){
            i=(r-l)/2+l;
            j=n/2-i;
            v1=(i>0)?(nums1[i-1]):INT_MIN, v2=(j>0)?(nums2[j-1]):INT_MIN, v3=(i<nums1.size())?nums1[i]:INT_MAX, v4=(j<nums2.size())?nums2[j]:INT_MAX;
            if(min(v3,v4)>=max(v1,v2)){
                if(n%2==0)return (min(v3,v4)+max(v1, v2))/2.0;
                return min(v3,v4);
            }
            else if(v1>v4) r=i-1;
            else l=i+1; 
        }
        return ans;
    }
};
