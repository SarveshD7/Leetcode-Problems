Problem Statement - 
Given an unsorted array arr of of positive integers. One number 'A' from set {1, 2,....,N} is missing and one number 'B' occurs twice in array. Find numbers A and B.

Example - 
Input: n = 2 arr[] = [2, 2]
Output: 2 1
Explanation: Repeating number is 2 and smallest positive missing number is 1.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
  public:
    vector<int> findTwoElement(vector<int> arr) {
        // code here
        
        long long s1=0, a=0, d1=0, d2=0, s2=0, n=arr.size(), sm=0, lr=0;
        long long sn=(n)*(n+1)/2, s2n=(n)*(n+1)*(2*n+1)/6; 
        for(int i=0;i<n;i++){
            s1+=arr[i];
            s2+=(long long) arr[i]* (long long) arr[i];
        }
        d1=abs(s1-sn);
        d2=abs(s2-s2n);
        lr=((d2/d1)+d1)/2;
        sm=lr-d1;
        if(s1>(n)*(n+1)/2) return {lr, sm};
        return {sm, lr};
        
    }
};
