Problem Link - 
You are given an array of N integers, A1, A2 ,..., AN and an integer B. Return the of count of distinct numbers in all windows of size B.
Formally, return an array of size N-B+1 where i'th element in this array contains number of distinct elements in sequence Ai, Ai+1 ,..., Ai+B-1.
NOTE:  if B > N, return an empty array.

Example - 
Input 1:
 A = [1, 2, 1, 3, 4, 3]
 B = 3
Input 2:
 A = [1, 1, 2, 2]
 B = 1
Example Output
Output 1:
 [2, 3, 3, 2]
Output 2:
 [1, 1, 1, 1]

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
vector<int> Solution::dNums(vector<int> &A, int B) {
    vector<int>ans;
    int n = A.size();
    if(B>n) return ans;
    int i = 0, start = 0;
    unordered_map<int, int>m;
    while(i<B){
        m[A[i]]++;
        i++;
    }
    ans.push_back(m.size());
    while(i<n){
        m[A[i]]++;
        m[A[start]]--;
        if(m[A[start]]==0) m.erase(A[start]);
        start++;
        ans.push_back(m.size());
        i++;
    }
    if(ans.empty()) ans.push_back(m.size());
    return ans;
}
