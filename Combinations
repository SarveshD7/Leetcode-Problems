Problem Statement - 
Given two integers n and k, return all possible combinations of k numbers chosen from the range [1, n].
You may return the answer in any order.

Example - 
Input: n = 4, k = 2
Output: [[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]]
Explanation: There are 4 choose 2 = 6 total combinations.
Note that combinations are unordered, i.e., [1,2] and [2,1] are considered to be the same combination.

--------------------------------------------------------------------------------------------------------------------
Solution - 
class Solution {
public:
    void solve(int n, int i,int prev, int k, vector<int>v, vector<vector<int>>&ans){
        if(i==k){
                ans.push_back(v);
            return ;
        }
        for(int j = prev+1;j<=n;j++){
                v.push_back(j);
                solve(n,i+1,j,k,v,ans);
                v.pop_back();
        }
    }
    vector<vector<int>> combine(int n, int k) {
        vector<int>v;
        vector<vector<int>>res;
        solve(n,0,0,k,v,res);
        return res;
    }
};
