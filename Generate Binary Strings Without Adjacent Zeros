Problem Statement - 
You are given a positive integer n.
A binary string x is valid if all 
substrings
 of x of length 2 contain at least one "1".
Return all valid strings with length n, in any order.

Example - 
Input: n = 3
Output: ["010","011","101","110","111"]
Explanation:
The valid strings of length 3 are: "010", "011", "101", "110", and "111".

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
public:
    void solve(int i, int prev, int n, vector<string>&ans, string temp){
        if(i>=n){
            ans.push_back(temp);
            return ;
        }
        temp[i] = '1';
        solve(i+1, '1', n, ans, temp);
        if(prev!='0' || i==0){
            temp[i] = '0';
            solve(i+1, '0', n, ans, temp);
        }
        return ;
    }
    vector<string> validStrings(int n) {
        vector<string>ans;
        string temp(n, '*');
        solve(0,'*', n, ans, temp);
        return ans;
    }
};
