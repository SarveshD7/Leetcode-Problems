Problem Statement - 
Given two integer arrays inorder and postorder where inorder is the inorder traversal of a 
binary tree and postorder is the postorder traversal of the same tree, construct and return the binary tree.

Example -
Input: inorder = [9,3,15,20,7], postorder = [9,15,7,20,3]
Output: [3,9,20,null,null,15,7]

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution - 

  /**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
  int search(vector<int>a,int k){
       int i=0;
       while(i<a.size()){
           if(a[i]==k)
                return i;
            i++;
       }
       return -1;
    }
    TreeNode* solve(vector<int> postorder,vector<int> inorder, int inStart,int inEnd, int& i){
        if(i<0 || inStart>inEnd)
            return  NULL;
        TreeNode* root = new TreeNode(postorder[i]);
        int pos = search(inorder,postorder[i]);
        i--;
        TreeNode* r = solve(postorder,inorder,pos+1,inEnd,i);
        TreeNode* l = solve(postorder,inorder,inStart,pos-1,i);
        root->left = l;
        root->right = r;
        return root;
    }
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        int i=postorder.size()-1;
        return solve(postorder,inorder,0,inorder.size()-1,i);

    }
};
  
