Problem Statement - 
Given the head of a singly linked list, reverse the list, and return the reversed list.

Example - 
Input: head = [1,2,3,4,5]
Output: [5,4,3,2,1]

---------------------------------------------------------------------------------------------

Solution - 
class Solution {
public:
    void reverseLL(ListNode* &head, ListNode* &curr, ListNode* &prev){
        if(!curr){ 
            head=prev;
            return ;
        }
        ListNode* nxt=curr->next;
        reverseLL(head, curr->next, curr);
        curr->next=prev;
        if(nxt) nxt->next=curr;
        return ;
    }
    ListNode* reverseList(ListNode* head) {
        ListNode* curr=head, *prev=NULL, *nxt=NULL;
        // reverseLL(head, curr, prev);
        while(curr){
            nxt=curr->next;
            curr->next=prev;
            prev=curr,curr=nxt;
        }
        head=prev;
        return head;
    }
};
