Problem Statement - 
Given the head of a singly linked list, reverse the list, and return the reversed list.

Example - 
Input: head = [1,2,3,4,5]
Output: [5,4,3,2,1]

---------------------------------------------------------------------------------------------

Solution - 
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    
    void reverse(ListNode* &head, ListNode* curr, ListNode* prev){
        
        ListNode* t1;
        if(curr==NULL)
        {
            head=prev;
            return ;
        }     
        else{
            t1=curr->next;
            curr->next=prev;
            prev=curr;
            curr=t1;
            reverse(head,curr,prev);
            
            // t1=curr;
            // reverse(head,curr->next,curr);
            // curr->next=prev;
        }
    }
    
    ListNode* reverseList(ListNode* head) {        
      ListNode* curr=head;
    ListNode* prev=NULL;
    reverse(head,curr,prev);        
        return head;
    }
};
