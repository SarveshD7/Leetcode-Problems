Problem Link - 
Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order.

Example - 
Input: n = 3
Output: [[1,2,3],[8,9,4],[7,6,5]]

-------------------------------------------------------------------------------------------------------------------

Solution -
class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
       vector<vector<int>>matrix(n, vector<int>(n,0));
        int rSt = 0, rEn = n-1, cSt = 0, cEn = n-1;
        int right = 1, left = 0, down = 0, up = 0, row = 0, col = 1;
        int r = 0, c = 0;
        int i = 1;
        // vector<int>ans;
        while(i<=(n*n)){
            // cout<<"r-"<<r<<" "<<"c-"<<c<<" "<<"rSt-"<<rSt<<" "<<"rEn-"<<rEn<<" "<<"cSt-"<<cSt<<" "<<"cEn-"<<cEn<<" "<<"up-"<<up<<" "<<"down-"<<down<<" "<<"left-"<<left<<" "<<"right-"<<right<<" "<<"row-"<<row<<" "<<"col-"<<col<<endl;
            if((r==rSt && c==cSt && (r!=0 || c!=0)) || (r==rSt && c==cEn) || (r==rEn && c==cEn) || (r==rSt && c==cEn) || (r==rEn && c==cSt)){
                
                if(right==1 && (r==rSt && c==cEn)){
                    rSt++;
                    right = 0;
                    down = 1;
                    col = 1 - col;
                row = 1 - row;
                }
                else if(down==1 && (r==rEn && c==cEn)){
                    cEn--;
                    down = 0;
                    left = 1;
                    col = 1 - col;
                row = 1 - row;
                }
                else if(left==1 && (r==rEn && c==cSt)){
                     rEn--;
                    left = 0;
                    up = 1;
                    col = 1 - col;
                row = 1 - row;
                // cout<<"Here for "<<matrix[r][c]<<endl;
                }
                else if(up==1 && (r==rSt && c==cSt)){
                    cSt++;
                    up = 0;
                    right = 1;
                    col = 1 - col;
                row = 1 - row;
                }
                
            }
            matrix[r][c] = i;
            if(right==1 && col==1) c+=1;
            else if(left==1 && col==1) c-=1;
            else if(down==1 && row==1) r+=1;
            else r-=1;
            // for(auto i:ans)
            //  cout<<i<<" ";
            //  cout<<endl;
            i++;
        }
        return matrix;
    }
};
