Problem Statement - 
There are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. 
You are given an array prerequisites where prerequisites[i] = [ai, bi] indicates that you must take course bi first if you want to take course ai.
For example, the pair [0, 1], indicates that to take course 0 you have to first take course 1.
Return true if you can finish all courses. Otherwise, return false.

Example - 
Input: numCourses = 2, prerequisites = [[1,0]]
Output: true
Explanation: There are a total of 2 courses to take. 
To take course 1 you should have finished course 0. So it is possible.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
public:
	void findInDegree(vector<vector<int>>& adj, vector<int>&ind){
	    for(int i=0;i<adj.size();i++){
	        for(auto j:adj[i]) ind[j]++;
	    }
	    return ;
	}
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int>ind(numCourses, 0);
        vector<vector<int>>adj(numCourses);
        for(auto i:prerequisites) adj[i[1]].push_back(i[0]);
        findInDegree(adj, ind);      
        queue<int>q;
        for(int i=0;i<numCourses;i++) if(ind[i]==0) q.push(i);
        int a;
        while(!q.empty()){
            a=q.front();
            for(auto i:adj[a]){
                ind[i]--;
                if(ind[i]==0) q.push(i);
            }
            q.pop();
        }
        for(auto i:ind) if(i!=0) return false;
        return true;
    }
};
