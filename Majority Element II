Problem Statement - 
Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.

Example - 
Input: nums = [3,2,3]
Output: [3]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        if(nums.size()<=1) return nums;
        int a=INT_MAX, b=INT_MAX, wa=0, wb=0, i=0, n = nums.size();
        while(i<nums.size()){
            if(nums[i]==a){
                wa++;
            }else if(nums[i]==b){
                wb++;
            }else if(a==INT_MAX) a=nums[i], wa=1;
            else if(b==INT_MAX) b=nums[i], wb=1;
            else{
                if(wa==0 && wb==0) a=nums[i], wa=1;
                else if(wa==0) a=nums[i], wa=1; 
                else if(wb==0) b=nums[i], wb=1;
                else wa--, wb--;
            }
            i++;
        }
        int f1=0, f2=0;
        for(auto i:nums){
            if(i==a) f1++;
            else if(i==b) f2++;
        }
        vector<int>ans;
        if(f1>n/3) ans.push_back(a);
        if(f2>n/3) ans.push_back(b);
        return ans;
    }
};
