Problem Statement - 
Given the root of a binary search tree, and an integer k,
return the kth smallest value (1-indexed) of all the values of the nodes in the tree.

Example - 
Input: root = [3,1,4,null,2], k = 1
Output: 1

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
public:
    void solve(TreeNode* r, int& k, int& cnt, int& ans){
        if(!r) return ;
        solve(r->left, k, cnt, ans);
        cnt++;
        if(cnt==k){ 
            ans=r->val;
            return ;
        }
        solve(r->right, k, cnt, ans);
        return ;
    }
    int kthSmallest(TreeNode* root, int k) {
        int cnt=0, ans=-1;
        solve(root, k, cnt, ans);
        return ans;
    }
};
