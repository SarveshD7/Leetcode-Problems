Problem Statement - 
Given a Binary Tree, convert it into its mirror.

Example - 
Input:
      1
    /  \
   2    3
Output: 3 1 2
Explanation: The tree is
   1    (mirror)  1
 /  \    =>      /  \
2    3          3    2
The inorder of mirror is 3 1 2

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 

class Solution {
  public:
    // Function to convert a binary tree into its mirror tree.
    Node* solve(Node* root){
        if(!root)
            return root;
        Node* l = solve(root->left);
        Node* r = solve(root->right);
        root->left = r;
        root->right = l;
        return root;
    }
    void mirror(Node* node) {
    node = solve(node);
    }
};
