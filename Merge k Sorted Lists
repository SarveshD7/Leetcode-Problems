Problem Statement - 
You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.
Merge all the linked-lists into one sorted linked-list and return it.

Example - 
Input: lists = [[1,4,5],[1,3,4],[2,6]]
Output: [1,1,2,3,4,4,5,6]
Explanation: The linked-lists are:
[
  1->4->5,
  1->3->4,
  2->6
]
merging them into one sorted list:
1->1->2->3->4->4->5->6

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {        
        priority_queue<ListNode*, vector<ListNode*>, CompareListNode>q;
        ListNode* temp=NULL, *nxt=NULL;
        for(auto i:lists){
            temp=i;
            while(temp) nxt=temp->next, temp->next=NULL, q.push(temp), temp=nxt;
        }
        if(q.empty()) return NULL;
        nxt=q.top(), q.pop(), temp=nxt;
        while(!q.empty()) temp->next=q.top(), q.pop(), temp=temp->next;
        return nxt;
    }
};
