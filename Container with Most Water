Problem Statement - 
You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
Find two lines that together with the x-axis form a container, such that the container contains the most water.
Return the maximum amount of water a container can store.
Notice that you may not slant the container.

Example - 
Input: height = [1,8,6,2,5,4,8,3,7]
Output: 49
Explanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. 
In this case, the max area of water (blue section) the container can contain is 49.

---------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
public:
    int maxArea(vector<int>& height) {
        int ans = 0;
        int st = 0, en = height.size()-1, h, w;
        while(st<en){
            h = min(height[st], height[en]);
            w = en - st;
            // cout<<height[st]<<" "<<height[en]<<endl;
            ans = max(ans, h*w);
            if(height[st]>height[en])  en--;
            else if(height[en]>height[st]) st++;
            else en--, st++;
        }
        return ans;

    }
};
