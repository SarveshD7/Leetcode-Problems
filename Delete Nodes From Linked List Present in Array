Problem Statement - 
You are given an array of integers nums and the head of a linked list. Return the head of the modified linked list after removing all nodes from the linked list that have a value that exists in nums.

Example - 
Input: nums = [1,2,3], head = [1,2,3,4,5]
Output: [4,5]

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* modifiedList(vector<int>& nums, ListNode* head) {
        ListNode* prev=NULL, *temp=NULL, *nxt=NULL;
        unordered_set<int>s;
        for(auto i:nums) s.insert(i);
        while(s.find(head->val)!=s.end()){
            nxt=head->next;
            head->next=NULL;
            head=nxt;
        }
        prev=head, temp=head->next, nxt=NULL;
        while(temp){
            nxt=temp->next;
            if(s.find(temp->val)!=s.end()){
                prev->next=nxt;
                temp->next=NULL;
            }else
                prev=temp;
            temp=nxt;
        }
        return head;
    }
};
