Problem Statement - 
You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).
You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

Example - 
Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[7,4,1],[8,5,2],[9,6,3]]

-------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        int m=matrix.size(), n=matrix[0].size(), temp, st, en;
        for(int i=0;i<m;i++){
            for(int j=i;j<n;j++){
                // if(i==3 && j==4) cout<<"Before swapping-> "<<matrix[i][j]<<endl;
                temp=matrix[i][j];
                matrix[i][j] = matrix[j][i];
                matrix[j][i]=temp;
                // if(i==3 && j==4) cout<<"After swapping-> "<<matrix[i][j]<<endl;
            }
        }
        // for(auto i:matrix){
        //     for(auto j:i) cout<<j<<" ";
        //     cout<<endl;
        // }
        for(int i=0;i<m;i++){
            st=0, en=n-1;
            while(st<en){
                temp=matrix[i][st];
                matrix[i][st]=matrix[i][en];
                matrix[i][en]=temp;
                st++, en--;
            }
        }
        return ;
    }
};
