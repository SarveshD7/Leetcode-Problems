Problem Statement - 
Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.

Example - 
Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
Output: 6
Explanation: [1,1,1,0,0,1,1,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
    public int longestOnes(int[] nums, int k) {
        int start = 0, end = 0;
        int ans = 0, zeros = 0;
        while (end < nums.length) {
            if (nums[end] == 0) {
                zeros++;
            }
            while (zeros > k) {
                if (nums[start] == 0) {
                    zeros--;
                }
                start++;
            }
            ans = Math.max(ans, end - start + 1);
            end++;
        }
        return ans;
    }
}
