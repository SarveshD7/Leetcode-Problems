Problem Statement - 
Given the head of a singly linked list, return true if it is a palindrome or false otherwise.

Example - 
Input: head = [1,2,2,1]
Output: true

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rev(ListNode* h){
        ListNode* c=h, *p=NULL, *t=NULL;
        while(c) t=c->next, c->next=p, p=c, c=t;
        return p;
    }
    bool isPalindrome(ListNode* head) {
        ListNode* s=head, *f=head, *h2=NULL, *t=NULL;
        while(f && f->next) f=f->next->next, s=s->next;
        h2=rev(s);        
        t=h2, f=head;
        while(h2 && f){
            if(h2->val!=f->val) return false;
            h2=h2->next, f=f->next;
        }
        rev(t);
        return true;

    }
};
