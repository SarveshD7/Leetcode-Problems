Problem Statement - 
Given a binary array nums, you should delete one element from it.
Return the size of the longest non-empty subarray containing only 1's in the resulting array. Return 0 if there is no such subarray.

Example - 
Input: nums = [1,1,0,1]
Output: 3
Explanation: After deleting the number in position 2, [1,1,1] contains 3 numbers with value of 1's.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
public:
    int longestSubarray(vector<int>& nums) {
        int ans = INT_MIN, end = 0, zeros = 0, start = 0;
        while(end<nums.size()){

            if(nums[end]==0) zeros++;
            while(zeros>1){
                if(nums[start]==0) zeros--;
                start++;
            }
            // if(zeros==1)
                ans = max(ans, end-start+1);
            end++;
        }
        return ans-1;
    }
};
