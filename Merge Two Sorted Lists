Problem Statement - 
You are given the heads of two sorted linked lists list1 and list2.
Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.
Return the head of the merged linked list.

Example - 
Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(!list1) return list2;
        if(!list2) return list1;
        ListNode* t1=list1, *t2=list2, *n1=NULL, *n2=NULL, *h=NULL, *p=NULL, *st=NULL;
        if(t2->val<t1->val) n1=t1, t1=t2, t2=n1;
        h=t1;
        while(t1 && t1->next && t2){
            n1=t1->next, n2=t2->next, st=t2, p=NULL;
            while(t2 && t2->val<=n1->val) p=t2, t2=t2->next;             
            if(p)t1->next=st, p->next=n1;
            t1=n1;
        }
        if(t2) t1->next=t2;
        return h;
    }
};
