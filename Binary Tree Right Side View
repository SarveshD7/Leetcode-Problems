Problem Statement - 
Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

Example - 
Input: root = [1,2,3,null,5,null,4]
Output: [1,3,4]

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        if(!root) return{};
        vector<int>ans;
        queue<TreeNode*>q;
        q.push(root);
        int lev=1;
        while(!q.empty()){
            int s=q.size();
            while(s--){
                if(ans.size()<lev) ans.push_back(q.front()->val);
                if(q.front()->right) q.push(q.front()->right);
                if(q.front()->left) q.push(q.front()->left);
                q.pop();
            }
            lev++;
        }
        return ans;
    }
};
