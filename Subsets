Problem Statement - 
Given an integer array nums of unique elements, return all possible subsets (the power set).
The solution set must not contain duplicate subsets. Return the solution in any order.

Example - 
Input: nums = [1,2,3]
Output: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solutions - 
class Solution {
public:
    void solve(vector<int>&nums, int i, vector<vector<int>>&ans, vector<int>v){
        if(i>=nums.size()){
            ans.push_back(v);
            return ;
        }
        // NOT PICK
        solve(nums, i+1, ans, v);
        // PICK
        v.push_back(nums[i]);
        solve(nums, i+1, ans, v);
        v.pop_back();
        return ;
    }   
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>>ans;
        vector<int>v;
        solve(nums, 0, ans, v);
        return ans;
    }
};
