Problem Statement - 
Given an array having both positive and negative integers. The task is to compute the length of the largest subarray with sum 0.

Example - 
Input:
N = 8
A[] = {15,-2,2,-8,1,7,10,23}
Output: 5
Explanation: The largest subarray with
sum 0 will be -2 2 -8 1 7.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution{
    public:
    int maxLen(vector<int>&A, int n)
    {   
        // Your code here
        unordered_map<int,int>m;
        int k = 0;
        
        int i = 0, ans = 0;
        k = 0;
        while(i<n){
            k+=A[i];
            if(k==0){
                ans = max(ans, i+1);
            }
            else if(m.find(k)!=m.end()){
                ans = max(ans, i - m[k]);   
                // cout<<i<<" "<<k<<" "<<ans<<" "<<m[k]<<endl;
            }
            else m[k] = i;
            i++;
        }
        if(k==0) ans = n;
        return ans;
    }
};
