Problem Statement - 
Given an array having both positive and negative integers. The task is to compute the length of the largest subarray with sum 0.

Example - 
Input:
N = 8
A[] = {15,-2,2,-8,1,7,10,23}
Output: 5
Explanation: The largest subarray with
sum 0 will be -2 2 -8 1 7.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution - 
class Solution {
  public:
    int maxLen(vector<int>& arr, int n) {
        // Your code here
        unordered_map<int, int>m;
        int s=0, ans=0, en=0;
        while(en<n){
            s+=arr[en];
            if(s==0) ans=max(ans, en+1);
            else if(m.find(s)!=m.end()) ans=max(ans, en-m[s]);
            if(m.find(s)==m.end()) m[s]=en;
            en++;
        }
        
        return ans;
    }
};

